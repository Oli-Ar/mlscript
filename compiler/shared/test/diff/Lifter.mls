class A(x) {
  class B(y) {
    fun getX = x
    fun getB1 = B1(y)
    class C(z) {
      fun inc() = x + 1
      fun getY = y
      fun getA = A(z)
      fun getB(w) = B(w)
      fun getC = new C(inc())
      fun getSelf = this
    }
  }
  class B1(y) {
    fun getX = x
    fun getY = y
    fun getB = new B(y)
    fun getB1 = new B1(y)
  }
  fun getB = new B(x)
  fun getB2(y) = B1(y)
  fun getB3(z) = getB2(z)
  fun getA = A(x)
}



class A(x) {
  class B(y) {
    class C(z) {
      fun sum = x + y + z
    }
  }
}




class A(x) {
  class B{
    fun foo = 1
    fun bar = 11
  }
  fun getB = new B{
    fun foo = 2
    fun bar = 12
  }
  fun bar = 13
}
class C: A{
  fun getB = new B{
    fun foo = 3
    fun bar = 14
  }
  fun bar = 15
}
new C{
  fun getB = new B{
    fun foo = 4
    fun bar = 16
  }
  fun bar = 17
}



class Parent<T, U, V>(x) { 
  fun foo(x: Int): T = x+1
  class Inner<W>(y: Int){
    fun bar(z: U) = foo(y)
    fun boo(z: W) = z
  }
}


class B<T> {}
class C {}
class A<T, U>(x: Int): {a1: Int} & B<T> {
  fun getA() = new C{
    fun foo(x: T) = x
  }
}


class Child<T, U>(x): { age: T } & { name: String} {
  class Inner{
    fun foo = age
  }
  fun bar = age
}


class A(x: Int) {
  fun getA: Int = 0
  fun getA1 = 1
}
new A(0) {
  fun getA = 3
  fun getA2 = 2
}


class A(x) {
  class B(y) {  }
}
new A(1) {
  fun getB = new B(2){
    fun getB = new B(3)
  }
}



class A {
  fun getA = 0
  fun funcA = 10
}
class B: A{
  fun getA = 1
  fun funcB = 11
}
new A
new B
fun f(x) = if x is A then 0 else 1
f(new A{
  fun getA = 2
})
new B{
  fun getA = funcB
}


class A{
  class B{
    fun funB = 1
    fun foo = 100
  }
  class C: B{
    fun funC = 2
    fun foo = 1000
  }
  class D{
    fun funD = 3
    fun foo = 10000    
    class E: C{
      fun funE = 4
      fun foo = 100000
    }
    class F: E{
      fun funF = 5
      fun foo = 1000000
    }
  }
}


class A{
  class B{
    fun funB = 1
    fun foo = 100
  }
  class C: B{
    fun funC = 2
    fun foo = 1000
    fun getB = new B
  }
  class D{
    fun funD = 3
    fun foo = 10000    
    class E: C{
      fun funE = 4
      fun foo = 100000
      fun getD = new D
    }
    class F: E{
      fun funF = 5
      fun foo = 1000000
      fun getE = new E{
        fun foo = 0
      }
    }
  }
}


class A{
  class B{
    fun foo = 1
  }
  fun bar = new B
}
new A


class A(x) {
  fun foo = 0
  fun bar = x
}
let x = new A{
  fun foo = 1
  fun newFun = 2
  fun bar = new A(foo){
    fun foo = bar + 1
    fun bar2 = newFun + 1
  }
}

class A {}
new A{
  fun foo = 1
  fun bar = new A{
    fun foo1 = foo
    fun bar1 = new A{
      fun foo2 = foo
      fun bar2 = new A{
        fun foo3 = foo
        fun bar3 = new A{
          fun foo4 = foo
          fun bar4 = 0
        }
      }
    }
  }
}

