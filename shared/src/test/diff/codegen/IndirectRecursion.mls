
// * Strangely, why Y does not work (cycle check error),
// * Z type checks find thanks to recursive types...


def z: (('a -> 'b) -> (('a -> 'b) & 'c)) -> 'c
//│ z: (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│  = <missing implementation>

:e
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ╔══[ERROR] Cyclic-looking constraint while typing application
//│ ║  l.12: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. {(α42'' -> α49'') where: α33' <: ((‹∀ 2. {(α43''' -> α45''') where: α42'' <: ((α42'',) -> α44''')}›,) -> α49'')}›  <:  α67'    PolymorphicType  TypeVariable
//│ ╙──  ... looks like:  ‹∀ 1. {(α42'' -> α49'') where: α33' <: ((‹∀ 2. {(α43''' -> α45''') where: α42'' <: ((α42'',) -> α44''')}›,) -> α49'')}›  <:  α42''
//│ ((forall 'a, 'b, 'c. ('b -> 'c
//│   where
//│     'a <: 'a -> 'b -> 'c)) -> 'd & (forall 'e, 'f, 'g. ('f -> 'g
//│   where
//│     'e <: 'e -> 'f -> 'g)) -> anything & (forall 'h, 'i, 'j. ('i -> 'j
//│   where
//│     'h <: 'h -> 'i -> 'j)) -> 'a -> anything & (forall 'k, 'l, 'm. ('l -> 'm
//│   where
//│     'k <: 'k -> 'l -> 'm)) -> 'a -> anything) -> (error | 'd)
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│  = [Function: z]


def pow1 = z (fun pow0 -> fun n -> fun x ->
    if n > 0 then pow0 (n - 1) x * x
    else 1
  )
//│ pow1: int -> (int & 'a) -> (forall 'a, 'b. (int
//│   where
//│     'b <: int -> 'a -> anything & int -> 'a -> int))
//│     = [Function (anonymous)]

pow1 3 4
//│ res: int
//│   where
//│     'a <: int -> 4 -> anything & int -> 4 -> int
//│    = 64


def pow pow n x =
    if n > 0 then pow (n - 1) x * x
    else 1
//│ pow: (int -> 'a -> int & int -> 'a -> 'b & 'b) -> int -> (int & 'a) -> (forall 'a, 'b. (int
//│   where
//│     'b <: int -> 'a -> 'b & int -> 'a -> int))
//│    = [Function: pow]

def pow = z pow
pow 3 4
//│ pow: int -> (int & 'a) -> (forall 'a, 'b. (int
//│   where
//│     'b <: int -> 'a -> anything & int -> 'a -> int))
//│    = [Function (anonymous)]
//│ res: int
//│   where
//│     'a <: int -> 4 -> anything & int -> 4 -> int
//│    = 64


def oops = z (fun f -> f)
//│ oops: anything -> nothing
//│     = [Function (anonymous)]

:re
oops 1
//│ res: nothing
//│ Runtime error:
//│   RangeError: Maximum call stack size exceeded


:NoRecursiveTypes

:e
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ╔══[ERROR] Cyclic-looking constraint while typing application
//│ ║  l.84: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. {(α432'' -> α439'') where: α423' <: ((‹∀ 2. {(α433''' -> α435''') where: α432'' <: ((α432'',) -> α434''')}›,) -> α439'')}›  <:  α457'    PolymorphicType  TypeVariable
//│ ╙──  ... looks like:  ‹∀ 1. {(α432'' -> α439'') where: α423' <: ((‹∀ 2. {(α433''' -> α435''') where: α432'' <: ((α432'',) -> α434''')}›,) -> α439'')}›  <:  α432''
//│ ((forall 'a, 'b, 'c. ('b -> 'c
//│   where
//│     'a <: 'a -> 'b -> 'c)) -> 'd & (forall 'e, 'f, 'g. ('f -> 'g
//│   where
//│     'e <: 'e -> 'f -> 'g)) -> anything & (forall 'h, 'i, 'j. ('i -> 'j
//│   where
//│     'h <: 'h -> 'i -> 'j)) -> 'a -> anything & (forall 'k, 'l, 'm. ('l -> 'm
//│   where
//│     'k <: 'k -> 'l -> 'm)) -> 'a -> anything) -> (error | 'd)
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.83: 	def z =
//│ ║        	^^^^^^^
//│ ║  l.84: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. {(α541' -> α548'') where: α528' <: ((‹∀ 2. {(α546''' -> α547''') where: α541' <: ((α541',) -> α545''')}›,) -> α548'')}›  <:  ((α541',) -> α581')    PolymorphicType  FunctionType
//│ ╙──  ... looks like:  ‹∀ 1. {(α432'' -> α439'') where: α528' <: ((‹∀ 2. {(α433''' -> α435''') where: α541' <: ((α432'',) -> α434''')}›,) -> α439'')}›  <:  ((α432'',) -> α545''')
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.83: 	def z =
//│ ║        	^^^^^^^
//│ ║  l.84: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  α528'  <:  ((‹∀ 2. {(α546''' -> α547''') where: α541' <: ((α541',) -> α545''')}›,) -> α588')    TypeVariable  FunctionType
//│ ╙──  ... looks like:  α423'  <:  ((‹∀ 2. {(α433''' -> α435''') where: α541' <: ((α432'',) -> α434''')}›,) -> α548'')
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.83: 	def z =
//│ ║        	^^^^^^^
//│ ║  l.84: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  α528'  <:  ((‹∀ 2. {(α546''' -> α547''') where: α541' <: ((α541',) -> α545''')}›,) -> α599')    TypeVariable  FunctionType
//│ ╙──  ... looks like:  α423'  <:  ((‹∀ 2. {(α433''' -> α435''') where: α541' <: ((α432'',) -> α434''')}›,) -> α548'')
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.83: 	def z =
//│ ║        	^^^^^^^
//│ ║  l.84: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. {(α541' -> α548'') where: α528' <: ((‹∀ 2. {(α546''' -> α547''') where: α541' <: ((α541',) -> α545''')}›,) -> α548'')}›  <:  ((α541',) -> α601')    PolymorphicType  FunctionType
//│ ╙──  ... looks like:  ‹∀ 1. {(α432'' -> α439'') where: α528' <: ((‹∀ 2. {(α433''' -> α435''') where: α541' <: ((α432'',) -> α434''')}›,) -> α439'')}›  <:  ((α432'',) -> α545''')
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.83: 	def z =
//│ ║        	^^^^^^^
//│ ║  l.84: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. {(α541' -> α548'') where: α528' <: ((‹∀ 2. {(α546''' -> α547''') where: α541' <: ((α541',) -> α545''')}›,) -> α548'')}›  <:  ((α541',) -> α601')    PolymorphicType  FunctionType
//│ ╙──  ... looks like:  ‹∀ 1. {(α432'' -> α439'') where: α528' <: ((‹∀ 2. {(α433''' -> α435''') where: α541' <: ((α432'',) -> α434''')}›,) -> α439'')}›  <:  ((α432'',) -> α545''')
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.83: 	def z =
//│ ║        	^^^^^^^
//│ ║  l.84: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. {(α541' -> α548'') where: α528' <: ((‹∀ 2. {(α546''' -> α547''') where: α541' <: ((α541',) -> α545''')}›,) -> α548'')}›  <:  ((α541',) -> α605')    PolymorphicType  FunctionType
//│ ╙──  ... looks like:  ‹∀ 1. {(α432'' -> α439'') where: α528' <: ((‹∀ 2. {(α433''' -> α435''') where: α541' <: ((α432'',) -> α434''')}›,) -> α439'')}›  <:  ((α432'',) -> α545''')
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.83: 	def z =
//│ ║        	^^^^^^^
//│ ║  l.84: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. {(α541' -> α548'') where: α528' <: ((‹∀ 2. {(α546''' -> α547''') where: α541' <: ((α541',) -> α545''')}›,) -> α548'')}›  <:  ((α541',) -> α605')    PolymorphicType  FunctionType
//│ ╙──  ... looks like:  ‹∀ 1. {(α432'' -> α439'') where: α528' <: ((‹∀ 2. {(α433''' -> α435''') where: α541' <: ((α432'',) -> α434''')}›,) -> α439'')}›  <:  ((α432'',) -> α545''')
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.83: 	def z =
//│ ║        	^^^^^^^
//│ ║  l.84: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. {(α541' -> α548'') where: α528' <: ((‹∀ 2. {(α546''' -> α547''') where: α541' <: ((α541',) -> α545''')}›,) -> α548'')}›  <:  ((α541',) -> α609')    PolymorphicType  FunctionType
//│ ╙──  ... looks like:  ‹∀ 1. {(α432'' -> α439'') where: α528' <: ((‹∀ 2. {(α433''' -> α435''') where: α541' <: ((α432'',) -> α434''')}›,) -> α439'')}›  <:  ((α432'',) -> α545''')
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.83: 	def z =
//│ ║        	^^^^^^^
//│ ║  l.84: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. {(α541' -> α548'') where: α528' <: ((‹∀ 2. {(α546''' -> α547''') where: α541' <: ((α541',) -> α545''')}›,) -> α548'')}›  <:  ((α541',) -> α609')    PolymorphicType  FunctionType
//│ ╙──  ... looks like:  ‹∀ 1. {(α432'' -> α439'') where: α528' <: ((‹∀ 2. {(α433''' -> α435''') where: α541' <: ((α432'',) -> α434''')}›,) -> α439'')}›  <:  ((α432'',) -> α545''')
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.83: 	def z =
//│ ║        	^^^^^^^
//│ ║  l.84: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. {(α541' -> α548'') where: α528' <: ((‹∀ 2. {(α546''' -> α547''') where: α541' <: ((α541',) -> α545''')}›,) -> α548'')}›  <:  ((α541',) -> α613')    PolymorphicType  FunctionType
//│ ╙──  ... looks like:  ‹∀ 1. {(α432'' -> α439'') where: α528' <: ((‹∀ 2. {(α433''' -> α435''') where: α541' <: ((α432'',) -> α434''')}›,) -> α439'')}›  <:  ((α432'',) -> α545''')
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.83: 	def z =
//│ ║        	^^^^^^^
//│ ║  l.84: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  ‹∀ 1. {(α541' -> α548'') where: α528' <: ((‹∀ 2. {(α546''' -> α547''') where: α541' <: ((α541',) -> α545''')}›,) -> α548'')}›  <:  ((α541',) -> α613')    PolymorphicType  FunctionType
//│ ╙──  ... looks like:  ‹∀ 1. {(α432'' -> α439'') where: α528' <: ((‹∀ 2. {(α433''' -> α435''') where: α541' <: ((α432'',) -> α434''')}›,) -> α439'')}›  <:  ((α432'',) -> α545''')
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.83: 	def z =
//│ ║        	^^^^^^^
//│ ║  l.84: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  α528'  <:  ((‹∀ 2. {(α546''' -> α547''') where: α541' <: ((α541',) -> α545''')}›,) -> α620')    TypeVariable  FunctionType
//│ ╙──  ... looks like:  α423'  <:  ((‹∀ 2. {(α433''' -> α435''') where: α541' <: ((α432'',) -> α434''')}›,) -> α548'')
//│ ╔══[ERROR] Cyclic-looking constraint while typing def definition
//│ ║  l.83: 	def z =
//│ ║        	^^^^^^^
//│ ║  l.84: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║        	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── ————————— Additional debugging info: —————————
//│ ╟── this constraint:  α528'  <:  ((‹∀ 2. {(α546''' -> α547''') where: α541' <: ((α541',) -> α545''')}›,) -> α621')    TypeVariable  FunctionType
//│ ╙──  ... looks like:  α423'  <:  ((‹∀ 2. {(α433''' -> α435''') where: α541' <: ((α432'',) -> α434''')}›,) -> α548'')
//│  = [Function: z1]

:NoCycleCheck

// Exceeds recursion depth limit:
:e
def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ╔══[ERROR] Subtyping constraint of the form `?a -> ?b <: (forall ?c, ?d, ?e, ?f, ?g, ?h, ?i, ?j. (?k -> ?j
//│   where
//│     ?l <: (forall ?f, ?m, ?n, ?g, ?h, ?i, ?k, ?o, ?p. (?m -> ?n
//│   where
//│     ?f <: ?k -> ?p)) -> ?j)) -> ?q` exceeded recursion depth limit (400)
//│ ║  l.213: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║         	            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  ‹∀ 1. {(α631'' -> α638'') where: α622' <: ((‹∀ 2. {(α632''' -> α634''') where: α631'' <: ((α631'',) -> α633''')}›,) -> α638'')}›  <!<  α736'
//│ ╟── while constraining:  α728'  <!<  α736'
//│ ╟── while constraining:  (α728',)  <!<  (α736',)
//│ ╟── while constraining:  (α736' -> α743')  <!<  ((α728',) -> α729')
//│ ╟── while constraining:  {(α736' -> α743') where: α622' <: ((‹∀ 2. {(α741''' -> α742''') where: α736' <: ((α736',) -> α740''')}›,) -> α743')}  <!<  ((α728',) -> α729')
//│ ╟── while constraining:  ‹∀ 1. {(α631'' -> α638'') where: α622' <: ((‹∀ 2. {(α632''' -> α634''') where: α631'' <: ((α631'',) -> α633''')}›,) -> α638'')}›  <!<  ((α728',) -> α729')
//│ ╟── while constraining:  ‹∀ 1. {(α631'' -> α638'') where: α622' <: ((‹∀ 2. {(α632''' -> α634''') where: α631'' <: ((α631'',) -> α633''')}›,) -> α638'')}›  <!<  α728'
//│ ╟── while constraining:  α720'  <!<  α728'
//│ ╟── while constraining:  (α720',)  <!<  (α728',)
//│ ╟── while constraining:  (α728' -> α735')  <!<  ((α720',) -> α721')
//│ ╟── while constraining:  {(α728' -> α735') where: α622' <: ((‹∀ 2. {(α733''' -> α734''') where: α728' <: ((α728',) -> α732''')}›,) -> α735')}  <!<  ((α720',) -> α721')
//│ ╟── while constraining:  ‹∀ 1. {(α631'' -> α638'') where: α622' <: ((‹∀ 2. {(α632''' -> α634''') where: α631'' <: ((α631'',) -> α633''')}›,) -> α638'')}›  <!<  ((α720',) -> α721')
//│ ╟── while constraining:  ‹∀ 1. {(α631'' -> α638'') where: α622' <: ((‹∀ 2. {(α632''' -> α634''') where: α631'' <: ((α631'',) -> α633''')}›,) -> α638'')}›  <!<  α720'
//│ ╟── while constraining:  α712'  <!<  α720'
//│ ╟── while constraining:  (α712',)  <!<  (α720',)
//│ ╟── ......
//│ ╟── ......
//│ ╟── while constraining:  ‹∀ 1. {(α631'' -> α638'') where: α622' <: ((‹∀ 2. {(α632''' -> α634''') where: α631'' <: ((α631'',) -> α633''')}›,) -> α638'')}›  <!<  α656'
//│ ╟── while constraining:  α648'  <!<  α656'
//│ ╟── while constraining:  (α648',)  <!<  (α656',)
//│ ╟── while constraining:  (α656' -> α663')  <!<  ((α648',) -> α649')
//│ ╟── while constraining:  {(α656' -> α663') where: α622' <: ((‹∀ 2. {(α661''' -> α662''') where: α656' <: ((α656',) -> α660''')}›,) -> α663')}  <!<  ((α648',) -> α649')
//│ ╟── while constraining:  ‹∀ 1. {(α631'' -> α638'') where: α622' <: ((‹∀ 2. {(α632''' -> α634''') where: α631'' <: ((α631'',) -> α633''')}›,) -> α638'')}›  <!<  ((α648',) -> α649')
//│ ╟── while constraining:  ‹∀ 1. {(α631'' -> α638'') where: α622' <: ((‹∀ 2. {(α632''' -> α634''') where: α631'' <: ((α631'',) -> α633''')}›,) -> α638'')}›  <!<  α648'
//│ ╟── while constraining:  α623'  <!<  α648'
//│ ╟── while constraining:  (α623',)  <!<  (α648',)
//│ ╟── while constraining:  (α648' -> α655')  <!<  ((α623',) -> α627')
//│ ╟── while constraining:  {(α648' -> α655') where: α622' <: ((‹∀ 2. {(α653''' -> α654''') where: α648' <: ((α648',) -> α652''')}›,) -> α655')}  <!<  ((α623',) -> α627')
//│ ╟── while constraining:  ‹∀ 1. {(α631'' -> α638'') where: α622' <: ((‹∀ 2. {(α632''' -> α634''') where: α631'' <: ((α631'',) -> α633''')}›,) -> α638'')}›  <!<  ((α623',) -> α627')
//│ ╟── while constraining:  ‹∀ 1. {(α631'' -> α638'') where: α622' <: ((‹∀ 2. {(α632''' -> α634''') where: α631'' <: ((α631'',) -> α633''')}›,) -> α638'')}›  <!<  α623'
//│ ╟── while constraining:  (‹∀ 1. {(α631'' -> α638'') where: α622' <: ((‹∀ 2. {(α632''' -> α634''') where: α631'' <: ((α631'',) -> α633''')}›,) -> α638'')}›,)  <!<  (α623',)
//│ ╙── while constraining:  (α623' -> α630')  <!<  ((‹∀ 1. {(α631'' -> α638'') where: α622' <: ((‹∀ 2. {(α632''' -> α634''') where: α631'' <: ((α631'',) -> α633''')}›,) -> α638'')}›,) -> α647')
//│ ((forall 'a, 'b, 'c. ('b -> 'c
//│   where
//│     'a <: 'a -> 'b -> 'c)) -> anything & (forall 'd, 'e, 'f. ('e -> 'f
//│   where
//│     'd <: 'd -> 'e -> 'f)) -> anything & (forall 'g, 'h, 'i. ('h -> 'i
//│   where
//│     'g <: 'g -> 'h -> 'i)) -> anything & (forall 'j, 'k, 'l. ('k -> 'l
//│   where
//│     'j <: 'j -> 'k -> 'l)) -> anything & (forall 'm, 'n, 'o. ('n -> 'o
//│   where
//│     'm <: 'm -> 'n -> 'o)) -> anything & (forall 'p, 'q, 'r. ('q -> 'r
//│   where
//│     'p <: 'p -> 'q -> 'r)) -> anything & (forall 's, 't, 'u. ('t -> 'u
//│   where
//│     's <: 's -> 't -> 'u)) -> anything & (forall 'v, 'w, 'x. ('w -> 'x
//│   where
//│     'v <: 'v -> 'w -> 'x)) -> anything & (forall 'y, 'z, 'a1. ('z -> 'a1
//│   where
//│     'y <: 'y -> 'z -> 'a1)) -> anything & (forall 'b1, 'c1, 'd1. ('c1 -> 'd1
//│   where
//│     'b1 <: 'b1 -> 'c1 -> 'd1)) -> anything & (forall 'e1, 'f1, 'g1. ('f1 -> 'g1
//│   where
//│     'e1 <: 'e1 -> 'f1 -> 'g1)) -> anything & (forall 'h1, 'i1, 'j1. ('i1 -> 'j1
//│   where
//│     'h1 <: 'h1 -> 'i1 -> 'j1)) -> anything & (forall 'k1, 'l1, 'm1. ('l1 -> 'm1
//│   where
//│     'k1 <: 'k1 -> 'l1 -> 'm1)) -> anything & (forall 'n1, 'o1, 'p1. ('o1 -> 'p1
//│   where
//│     'n1 <: 'n1 -> 'o1 -> 'p1)) -> anything) -> error
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│ ╔══[ERROR] Subtyping constraint of the form `forall ?d, ?e, ?f, ?g, ?h, ?i, ?j, ?k, ?l, ?m, ?n, ?o, ?p, ?q, ?r, ?s, ?t, ?u, ?v, ?w, ?x, ?y, ?z, ?a1, ?b1, ?c1, ?d1, ?e1, ?f1, ?g1, ?h1, ?i1, ?j1, ?k1, ?l1, ?m1, ?n1, ?o1, ?p1, ?q1, ?r1, ?s1, ?t1, ?u1, ?v1, ?w1, ?x1, ?y1, ?z1, ?a2, ?b2, ?c2, ?d2, ?e2, ?f2, ?g2, ?h2, ?i2, ?j2, ?k2, ?l2, ?m2, ?n2, ?o2, ?p2, ?q2, ?r2, ?s2, ?t2, ?u2, ?v2, ?w2, ?x2, ?y2, ?z2, ?a3, ?b3, ?c3, ?d3, ?e3, ?f3, ?g3, ?h3, ?i3, ?j3, ?k3, ?l3, ?m3, ?n3, ?o3, ?p3, ?q3, ?r3, ?s3, ?t3, ?u3, ?v3, ?w3, ?x3, ?y3, ?z3, ?a4, ?b4, ?c4, ?d4, ?e4, ?f4, ?g4, ?h4. ?e3 -> ?h4 <: forall ?a, ?b, ?c. ((?a -> ?b) -> (?a -> ?b & ?c)) -> ?c` exceeded recursion depth limit (400)
//│ ║  l.212: 	def z =
//│ ║         	^^^^^^^
//│ ║  l.213: 	  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ║         	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//│ ╟── while constraining:  ‹∀ 1. {(α951' -> α958'') where: α941' <: ((‹∀ 2. {(α956''' -> α957''') where: α951' <: ((α951',) -> α955''')}›,) -> α958'')}›  <!<  ((α951',) -> α1090')
//│ ╟── while constraining:  α951'  <!<  ((α951',) -> α1090')
//│ ╟── while constraining:  {(α1091' -> α1092') where: α951' <: ((α951',) -> α1090')}  <!<  (‘a' -> ‘b')
//│ ╟── while constraining:  ‹∀ 2. {(α956''' -> α957''') where: α951' <: ((α951',) -> α955''')}›  <!<  (‘a' -> ‘b')
//│ ╟── while constraining:  (‹∀ 2. {(α956''' -> α957''') where: α951' <: ((α951',) -> α955''')}›,)  <!<  ((‘a' -> ‘b'),)
//│ ╟── while constraining:  ((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c'))  <!<  ((‹∀ 2. {(α956''' -> α957''') where: α951' <: ((α951',) -> α955''')}›,) -> α1089')
//│ ╟── while constraining:  α941'  <!<  ((‹∀ 2. {(α956''' -> α957''') where: α951' <: ((α951',) -> α955''')}›,) -> α1089')
//│ ╟── while constraining:  {(α951' -> α1089') where: α941' <: ((‹∀ 2. {(α956''' -> α957''') where: α951' <: ((α951',) -> α955''')}›,) -> α1089')}  <!<  ((α951',) -> α1086')
//│ ╟── while constraining:  ‹∀ 1. {(α951' -> α958'') where: α941' <: ((‹∀ 2. {(α956''' -> α957''') where: α951' <: ((α951',) -> α955''')}›,) -> α958'')}›  <!<  ((α951',) -> α1086')
//│ ╟── while constraining:  α951'  <!<  ((α951',) -> α1086')
//│ ╟── while constraining:  {(α1087' -> α1088') where: α951' <: ((α951',) -> α1086')}  <!<  (‘a' -> ‘b')
//│ ╟── while constraining:  ‹∀ 2. {(α956''' -> α957''') where: α951' <: ((α951',) -> α955''')}›  <!<  (‘a' -> ‘b')
//│ ╟── while constraining:  (‹∀ 2. {(α956''' -> α957''') where: α951' <: ((α951',) -> α955''')}›,)  <!<  ((‘a' -> ‘b'),)
//│ ╟── while constraining:  ((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c'))  <!<  ((‹∀ 2. {(α956''' -> α957''') where: α951' <: ((α951',) -> α955''')}›,) -> α1085')
//│ ╟── while constraining:  α941'  <!<  ((‹∀ 2. {(α956''' -> α957''') where: α951' <: ((α951',) -> α955''')}›,) -> α1085')
//│ ╟── ......
//│ ╟── ......
//│ ╟── while constraining:  α950'  <!<  α951'
//│ ╟── while constraining:  (α950',)  <!<  (α951',)
//│ ╟── while constraining:  (α951' -> α1069')  <!<  ((α950',) -> α1066')
//│ ╟── while constraining:  {(α951' -> α1069') where: α941' <: ((‹∀ 2. {(α956''' -> α957''') where: α951' <: ((α951',) -> α955''')}›,) -> α1069')}  <!<  ((α950',) -> α1066')
//│ ╟── while constraining:  ‹∀ 1. {(α951' -> α958'') where: α941' <: ((‹∀ 2. {(α956''' -> α957''') where: α951' <: ((α951',) -> α955''')}›,) -> α958'')}›  <!<  ((α950',) -> α1066')
//│ ╟── while constraining:  α950'  <!<  ((α950',) -> α1066')
//│ ╟── while constraining:  {(α1067' -> α1068') where: α950' <: ((α950',) -> α1066')}  <!<  (‘a' -> ‘b')
//│ ╟── while constraining:  ‹∀ 2. {(α963''' -> α964''') where: α950' <: ((α950',) -> α962''')}›  <!<  (‘a' -> ‘b')
//│ ╟── while constraining:  (‹∀ 2. {(α963''' -> α964''') where: α950' <: ((α950',) -> α962''')}›,)  <!<  ((‘a' -> ‘b'),)
//│ ╟── while constraining:  ((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c'))  <!<  ((‹∀ 2. {(α963''' -> α964''') where: α950' <: ((α950',) -> α962''')}›,) -> α965')
//│ ╟── while constraining:  ((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c'))  <!<  α941'
//│ ╟── while constraining:  (((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c')),)  <!<  (α941',)
//│ ╟── while constraining:  (α941' -> α1062')  <!<  (((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c')) -> ‘c')
//│ ╟── while constraining:  ‹∀ 0. (α622' -> α647')›  <!<  (((‘a' -> ‘b') -> ((‘a' -> ‘b') & ‘c')) -> ‘c')
//│ ╙── while constraining:  ‹∀ 0. (α622' -> α647')›  <!<  ‹∀ 0. ((('a21' -> 'b22') -> (('a21' -> 'b22') & 'c23')) -> 'c23')›
//│  = [Function: z2]


// :NoConstrainnedTypes // doesn't help
:NoArgGen

:CycleCheck
:RecursiveTypes // necessary or we get cycle error

def z =
  (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))
//│ ((forall 'a, 'b, 'c. ('b -> 'c
//│   where
//│     'a <: 'a -> 'b -> 'c)) -> 'd) -> 'd
//│   <:  z:
//│ (('a -> 'b) -> ('a -> 'b & 'c)) -> 'c
//│  = [Function: z3]

// * Diverges:
// :NoCycleCheck
// :NoRecursiveTypes
// def z =
//   (fun f -> (fun x -> f (fun v -> (x x) v)) (fun x -> f (fun v -> (x x) v)))


