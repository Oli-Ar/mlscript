:GeneralizeCurriedFunctions
:NoRecursiveTypes
:NoProvs
// :ArgGen



def auto_ : (forall 'a. 'a -> 'a) -> 0
//│ auto_: (forall 'a. 'a -> 'a) -> 0
//│      = <missing implementation>

:d
foo(x: ('a -> 'b)) = auto_ x
//│ 1. Typing term (((x : Function(Tuple(List((None,Field(None,'a)))),'b)),) => (auto_ (x,)))
//│ | TYPING POLY LAM
//│ | 2. Typing pattern ((x : Function(Tuple(List((None,Field(None,'a)))),'b)),)
//│ | | 2. Typing pattern (x : Function(Tuple(List((None,Field(None,'a)))),'b))
//│ | | | 2. Typing pattern x : Function(Tuple(List((None,Field(None,'a)))),'b)
//│ | | | | 2. Typing pattern x
//│ | | | | 2. : x25''
//│ | | | | 2. Typing type Function(Tuple(List((None,Field(None,'a)))),'b)
//│ | | | | | vars=Map() newDefsInfo=Map()
//│ | | | | => ('a26'' -> 'b27'') | 'b27'', 'a26''
//│ | | | | CONSTRAIN x25'' <! ('a26'' -> 'b27'')
//│ | | | |   where 
//│ | | | | 2. C x25'' <! ('a26'' -> 'b27'')    (0)
//│ | | | | | NEW x25'' UB (2)
//│ | | | | CONSTRAIN ('a26'' -> 'b27'') <! x25''
//│ | | | |   where 
//│ 		x25'' <: ('a26'' -> 'b27'')
//│ | | | | 2. C ('a26'' -> 'b27'') <! x25''    (0)
//│ | | | | | NEW x25'' LB (2)
//│ | | | | | 2. C ('a26'' -> 'b27'') <! ('a26'' -> 'b27'')    (1)
//│ | | | 2. : ('a26'' -> 'b27'')
//│ | | 2. : ('a26'' -> 'b27'')
//│ | 2. : (('a26'' -> 'b27''),)
//│ | 2. Typing term (auto_ (x,))
//│ | | 2. Typing term auto_
//│ | | 2. : (‹∀ 1. ('a21'' -> 'a21'')› -> 0<int,number>)
//│ | | 2. Typing term x
//│ | | 2. : x25''
//│ | | CONSTRAIN (‹∀ 1. ('a21'' -> 'a21'')› -> 0<int,number>) <! (x25'' -> α28'')
//│ | |   where 
//│ 		x25'' :> ('a26'' -> 'b27'') <: ('a26'' -> 'b27'')
//│ | | 2. C (‹∀ 1. ('a21'' -> 'a21'')› -> 0<int,number>) <! (x25'' -> α28'')    (0)
//│ | | | 2. C (x25'',) <! (‹∀ 1. ('a21'' -> 'a21'')›,)    (1)
//│ | | | | 2. C x25'' <! ‹∀ 1. ('a21'' -> 'a21'')›    (2)
//│ | | | | | NEW x25'' UB (0)
//│ | | | | | 2. C ('a26'' -> 'b27'') <! ‹∀ 1. ('a21'' -> 'a21'')›    (3)
//│ | | | | | | BUMP TO LEVEL 3  -->  (‘a''' -> ‘a''')
//│ | | | | | | where 
//│ | | | | | | 3. C ('a26'' -> 'b27'') <! (‘a''' -> ‘a''')    (4)
//│ | | | | | | | 3. C (‘a''',) <! ('a26'',)    (5)
//│ | | | | | | | | 3. C ‘a''' <! 'a26''    (6)
//│ | | | | | | | | | wrong level: 3
//│ | | | | | | | | | STASHING 'a26'' bound in extr ctx
//│ | | | | | | | 3. C 'b27'' <! ‘a'''    (5)
//│ | | | | | | | | wrong level: 3
//│ | | | | | | | | STASHING 'b27'' bound in extr ctx
//│ | | | | | | UNSTASHING...
//│ | | | | | | | where('a26'') 
//│ | | | | | | | UNSTASH ‘a''' <: 'a26'' where 
//│ | | | | | | | 2. C ‘a''' <! 'a26''    (4)
//│ | | | | | | | | wrong level: 3
//│ | | | | | | | | EXTR LHS  ~>  ‘a_29''  to 2
//│ | | | | | | | |  where 
//│ | | | | | | | | 2. C ‘a_29'' <! 'a26''    (5)
//│ | | | | | | | | | NEW 'a26'' LB (2)
//│ | | | | | | | where('b27'') 
//│ | | | | | | | UNSTASH 'b27'' <: ‘a''' where 
//│ | | | | | | | 2. C 'b27'' <! ‘a'''    (4)
//│ | | | | | | | | wrong level: 3
//│ | | | | | | | | EXTR RHS  ~>  ‹∀ 2. 'a30'''›  to 2
//│ | | | | | | | |  where 
//│ | | | | | | | | 2. C 'b27'' <! ‹∀ 2. 'a30'''›    (5)
//│ | | | | | | | | | NEW 'b27'' UB (0)
//│ | | | | | | UNSTASHING... (out)
//│ | | | 2. C 0<int,number> <! α28''    (1)
//│ | | | | NEW α28'' LB (0)
//│ | 2. : α28''
//│ | UNSTASHING... (out)
//│ 1. : ‹∀ 1. (('a26'' -> 'b27'') -> α28'')›
//│ UNSTASHING... (out)
//│ ⬤ Typed as: ‹∀ 0. ‹∀ 1. (('a26'' -> 'b27'') -> α28'')››
//│  where: 
//│ 		'a26'' :> ‘a_29''
//│ 		'b27'' <: ‹∀ 2. 'a30'''›
//│ 		α28'' :> 0<int,number>
//│ foo: (‘a_29 -> anything) -> 0
//│    = <no result>
//│      auto_ is not implemented

:e
:d
foo (fun x -> x)
//│ 0. Typing term (foo ((((x,) => x)),))
//│ | 0. Typing term foo
//│ | 0. : ‹∀ 0. ‹∀ 1. (('a26'' -> 'b27'') -> α28'')››
//│ | 0. Typing term (((x,) => x))
//│ | | 0. Typing term ((x,) => x)
//│ | | | TYPING POLY LAM
//│ | | | 1. Typing pattern (x,)
//│ | | | | 1. Typing pattern x
//│ | | | | 1. : x35'
//│ | | | 1. : (x35',)
//│ | | | 1. Typing term x
//│ | | | 1. : x35'
//│ | | | UNSTASHING... (out)
//│ | | 0. : ‹∀ 0. (x35' -> x35')›
//│ | 0. : ‹∀ 0. (x35' -> x35')›
//│ | CONSTRAIN ‹∀ 0. ‹∀ 1. (('a26'' -> 'b27'') -> α28'')›› <! (‹∀ 0. (x35' -> x35')› -> α36)
//│ |   where 
//│ 		'a26'' :> ‘a_29''
//│ 		'b27'' <: ‹∀ 2. 'a30'''›
//│ 		α28'' :> 0<int,number>
//│ | 0. C ‹∀ 0. ‹∀ 1. (('a26'' -> 'b27'') -> α28'')›› <! (‹∀ 0. (x35' -> x35')› -> α36)    (0)
//│ | | 0. C ‹∀ 1. (('a26'' -> 'b27'') -> α28'')› <! (‹∀ 0. (x35' -> x35')› -> α36)    (1)
//│ | | | INST [1]   ‹∀ 1. (('a26'' -> 'b27'') -> α28'')›
//│ | | |   where  
//│ 		'a26'' :> ‘a_29''
//│ 		'b27'' <: ‹∀ 2. 'a30'''›
//│ 		α28'' :> 0<int,number>
//│ | | | TO [0] ~>  (('a26_37 -> 'b27_38) -> α28_39)
//│ | | |   where  
//│ 		'a26_37 :> ‘a_29
//│ 		'b27_38 <: ‹∀ 2. 'a30'''›
//│ 		α28_39 :> 0<int,number>
//│ | | | 0. C (('a26_37 -> 'b27_38) -> α28_39) <! (‹∀ 0. (x35' -> x35')› -> α36)    (2)
//│ | | | | 0. C (‹∀ 0. (x35' -> x35')›,) <! (('a26_37 -> 'b27_38),)    (3)
//│ | | | | | 0. C ‹∀ 0. (x35' -> x35')› <! ('a26_37 -> 'b27_38)    (4)
//│ | | | | | | INST [0]   ‹∀ 0. (x35' -> x35')›
//│ | | | | | |   where  
//│ | | | | | | TO [0] ~>  (x35_40 -> x35_40)
//│ | | | | | |   where  
//│ | | | | | | 0. C (x35_40 -> x35_40) <! ('a26_37 -> 'b27_38)    (5)
//│ | | | | | | | 0. C ('a26_37,) <! (x35_40,)    (6)
//│ | | | | | | | | 0. C 'a26_37 <! x35_40    (7)
//│ | | | | | | | | | NEW 'a26_37 UB (0)
//│ | | | | | | | | | 0. C ‘a_29 <! x35_40    (8)
//│ | | | | | | | | | | NEW x35_40 LB (0)
//│ | | | | | | | 0. C x35_40 <! 'b27_38    (6)
//│ | | | | | | | | NEW x35_40 UB (0)
//│ | | | | | | | | 0. C ‘a_29 <! 'b27_38    (7)
//│ | | | | | | | | | NEW 'b27_38 LB (0)
//│ | | | | | | | | | 0. C ‘a_29 <! ‹∀ 2. 'a30'''›    (8)
//│ | | | | | | | | | | BUMP TO LEVEL 1  -->  ‘a'
//│ | | | | | | | | | | where 
//│ | | | | | | | | | | 1. C ‘a_29 <! ‘a'    (9)
//│ | | | | | | | | | | | CONSTRAINT FAILURE: ‘a_29 <: ‘a'
//│ | | | | | | | | | | | allVarPols: 
//│ | | | | | | | | | | | norm[+] ‘a_29
//│ | | | | | | | | | | | | DNF: DNF(1024, {}∧‘a_29)
//│ | | | | | | | | | | | ~> ‘a_29
//│ | | | | | | | | | | | CONSTRAIN error<> <! α36
//│ | | | | | | | | | | |   where 
//│ | | | | | | | | | | | 0. C error<> <! α36    (0)
//│ | | | | | | | | | | | | NEW α36 LB (0)
//│ ╔══[ERROR] Type mismatch in application:
//│ ║  l.95: 	foo (fun x -> x)
//│ ║        	^^^^^^^^^^^^^^^^
//│ ╟── type `‘a_29` is not an instance of type `'a`
//│ ║  l.8: 	def auto_ : (forall 'a. 'a -> 'a) -> 0
//│ ║       	                    ^^
//│ ╟── Note: constraint arises from quantified type variable:
//│ ║  l.8: 	def auto_ : (forall 'a. 'a -> 'a) -> 0
//│ ╙──     	                    ^^
//│ 0. : α36
//│ ⬤ Typed as: ‹∀ 0. α36›
//│  where: 
//│ 		α36 :> error<>
//│ res: error
//│    = <no result>
//│      foo and auto_ are not implemented


