
// :d
// :s
def foo f =
  f (fun x -> x)
//│ foo: ((forall 'a. ('a -> 'a,)) -> 'b) -> 'b
//│    = [Function: foo]

def bar h =
  (h 0, h true)
//│ bar: (true -> 'a & 0 -> 'b) -> ('b, 'a,)
//│    = [Function: bar]

bar id
//│ res: (0, true,)
//│    = [ 0, true ]

foo bar
//│ res: (0 | true, 0 | true,)
//│    = [ 0, true ]


def foo2 f =
  f id
//│ foo2: ((forall 'a. 'a -> 'a) -> 'b) -> 'b
//│     = [Function: foo2]

foo2 bar
//│ res: (0, true,)
//│    = [ 0, true ]



def foo x f = f (fun a -> (x, a))
//│ foo: 'a -> ((forall 'b. ('b -> ('a, 'b,),)) -> 'c) -> 'c
//│    = [Function: foo1]

// Swapping the parameters givesa an isomorphic type:

def foo f x = f (fun a -> (x, a))
//│ foo: ((forall 'a. ('a -> ('b, 'a,),)) -> 'c) -> 'b -> 'c
//│    = [Function: foo3]



