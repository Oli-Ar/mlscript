:GeneralizeCurriedFunctions

// type ChurchInt = forall 'N. ('N -> 'N) -> ('N -> 'N)

// :ArgGen

// :d
// :ns
// def s n = fun f -> fun x -> f (n f x)
def s n = fun f -> fun x -> (n f x)
// def s n = fun f -> n f
// def s n = n
//│ s: ('a -> 'b -> 'c) -> (forall 'a. 'a -> (forall 'b, 'c. 'b -> 'c))
//│  = [Function: s]

def succ: (forall 'N. ('N -> 'N) -> ('N -> 'N)) -> (forall 'M. ('M -> 'M) -> ('M -> 'M))
//│ succ: (forall 'N. ('N -> 'N) -> 'N -> 'N) -> (forall 'M. ('M -> 'M) -> 'M -> 'M)
//│     = <missing implementation>

// :DistributeForalls

// :ns
:e // * Needs distrib (see below)
// :d
succ = s
//│ ('a -> 'b -> 'c) -> (forall 'a. 'a -> (forall 'b, 'c. 'b -> 'c))
//│   <:  succ:
//│ (forall 'N. ('N -> 'N) -> 'N -> 'N) -> (forall 'M. ('M -> 'M) -> 'M -> 'M)
//│     = [Function: s]



// ==========================================================================


def s n = fun f -> n f
//│ s: ('a -> 'b) -> (forall 'a, 'b. 'a -> 'b)
//│  = [Function: s1]

// def succ: (forall 'N. ('N -> 'N) -> ('N -> 'N)) -> (forall 'M. ('M -> 'M) -> ('M -> 'M))
def succ_min : (forall 'N. ('N -> 'N)) -> (forall 'M. ('M -> 'M))
//│ succ_min: (forall 'N. 'N -> 'N) -> (forall 'M. 'M -> 'M)
//│         = <missing implementation>

// :DistributeForalls

// :ns
:e // * Needs distrib (see below)
:d
succ_min = s
// succ n = s n
// s id : (forall 'M. ('M -> 'M))
//│ 1. Typing term s   None
//│ 1. : ‹∀ 0. ‹∀ 1. (α75'' -> ‹∀ 2. (α76''' -> α77''')›)››
//│ ⬤ Typed as: ‹∀ 0. ‹∀ 0. ‹∀ 1. (α75'' -> ‹∀ 2. (α76''' -> α77''')›)›››
//│  where: 
//│ 		α75'' <: ((α76''',) -> α77''')
//│ ⬤ Typed as: ‹∀ 0. (‹∀ 1. ('N85'' -> 'N85'')› -> ‹∀ 1. ('M86'' -> 'M86'')›)›
//│  where: 
//│ ('a -> 'b) -> (forall 'a, 'b. 'a -> 'b)
//│   <:  succ_min:
//│ (forall 'N. 'N -> 'N) -> (forall 'M. 'M -> 'M)
//│ CHECKING SUBSUMPTION...
//│ CONSTRAIN ‹∀ 0. ‹∀ 0. ‹∀ 1. (α75'' -> ‹∀ 2. (α76''' -> α77''')›)››› <! ‹∀ 0. (‹∀ 1. ('N85'' -> 'N85'')› -> ‹∀ 1. ('M86'' -> 'M86'')›)›
//│   where 
//│ 		α75'' <: ((α76''',) -> α77''')
//│ 0. C ‹∀ 0. ‹∀ 0. ‹∀ 1. (α75'' -> ‹∀ 2. (α76''' -> α77''')›)››› <! ‹∀ 0. (‹∀ 1. ('N85'' -> 'N85'')› -> ‹∀ 1. ('M86'' -> 'M86'')›)›
//│ | BUMP TO LEVEL 1  -->  (‹∀ 1. ('N85'' -> 'N85'')› -> ‹∀ 1. ('M86'' -> 'M86'')›)
//│ | where 
//│ | 1. C ‹∀ 0. ‹∀ 0. ‹∀ 1. (α75'' -> ‹∀ 2. (α76''' -> α77''')›)››› <! (‹∀ 1. ('N85'' -> 'N85'')› -> ‹∀ 1. ('M86'' -> 'M86'')›)
//│ | | 1. C ‹∀ 0. ‹∀ 1. (α75'' -> ‹∀ 2. (α76''' -> α77''')›)›› <! (‹∀ 1. ('N85'' -> 'N85'')› -> ‹∀ 1. ('M86'' -> 'M86'')›)
//│ | | | 1. C ‹∀ 1. (α75'' -> ‹∀ 2. (α76''' -> α77''')›)› <! (‹∀ 1. ('N85'' -> 'N85'')› -> ‹∀ 1. ('M86'' -> 'M86'')›)
//│ | | | | INST [1]   ‹∀ 1. (α75'' -> ‹∀ 2. (α76''' -> α77''')›)›
//│ | | | |   where  
//│ 		α75'' <: ((α76''',) -> α77''')
//│ | | | | TO [1] ~>  (α75_106' -> ‹∀ 2. (α76''' -> α77''')›)
//│ | | | |   where  
//│ 		α75_106' <: ((α76_107''',) -> α77_108''')
//│ | | | | 1. C (α75_106' -> ‹∀ 2. (α76''' -> α77''')›) <! (‹∀ 1. ('N85'' -> 'N85'')› -> ‹∀ 1. ('M86'' -> 'M86'')›)
//│ | | | | | 1. C (‹∀ 1. ('N85'' -> 'N85'')›,) <! (α75_106',)
//│ | | | | | | 1. C ‹∀ 1. ('N85'' -> 'N85'')› <! α75_106'
//│ | | | | | | | NEW α75_106' LB (0)
//│ | | | | | | | 1. C ‹∀ 1. ('N85'' -> 'N85'')› <! ((α76_107''',) -> α77_108''')
//│ | | | | | | | | 1. C ‹∀ 1. ('N85'' -> 'N85'')› <! ((α76_107''',) -> α77_108''')
//│ | | | | | | | | | 1. C ‹∀ 1. ('N85'' -> 'N85'')› <! ((α76_107''',) -> α77_108''')
//│ | | | | | | | | | | 1. C ‹∀ 1. ('N85'' -> 'N85'')› <! ((α76_107''',) -> α77_108''')
//│ | | | | | | | | | | | 1. C ‹∀ 1. ('N85'' -> 'N85'')› <! ((α76_107''',) -> α77_108''')
//│ | | | | | | | | | | | | INST [1]   ‹∀ 1. ('N85'' -> 'N85'')›
//│ | | | | | | | | | | | |   where  
//│ | | | | | | | | | | | | TO [1] ~>  ('N85_109' -> 'N85_109')
//│ | | | | | | | | | | | |   where  
//│ | | | | | | | | | | | | 1. C ('N85_109' -> 'N85_109') <! ((α76_107''',) -> α77_108''')
//│ | | | | | | | | | | | | | 1. C (α76_107''',) <! ('N85_109',)
//│ | | | | | | | | | | | | | | 1. C (α76_107''',) <! ('N85_109',)
//│ | | | | | | | | | | | | | | | 1. C α76_107''' <! 'N85_109'
//│ | | | | | | | | | | | | | | | | 1. C α76_107''' <! 'N85_109'
//│ | | | | | | | | | | | | | | | | | NEW α76_107''' UB (1)
//│ | | | | | | | | | | | | | 1. C 'N85_109' <! α77_108'''
//│ | | | | | | | | | | | | | | NEW 'N85_109' UB (3)
//│ | | | | | 1. C ‹∀ 2. (α76''' -> α77''')› <! ‹∀ 1. ('M86'' -> 'M86'')›
//│ | | | | | | BUMP TO LEVEL 2  -->  (‘M'' -> ‘M'')
//│ | | | | | | where 
//│ | | | | | | 2. C ‹∀ 2. (α76''' -> α77''')› <! (‘M'' -> ‘M'')
//│ | | | | | | | INST [2]   ‹∀ 2. (α76''' -> α77''')›
//│ | | | | | | |   where  
//│ | | | | | | | TO [2] ~>  (α76_110'' -> α77_111'')
//│ | | | | | | |   where  
//│ | | | | | | | 2. C (α76_110'' -> α77_111'') <! (‘M'' -> ‘M'')
//│ | | | | | | | | 2. C (‘M'',) <! (α76_110'',)
//│ | | | | | | | | | 2. C ‘M'' <! α76_110''
//│ | | | | | | | | | | NEW α76_110'' LB (2)
//│ | | | | | | | | 2. C α77_111'' <! ‘M''
//│ | | | | | | | | | NEW α77_111'' UB (2)
//│         = [Function: s1]



