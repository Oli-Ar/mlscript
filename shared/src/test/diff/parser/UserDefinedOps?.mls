:AllowParseErrors
:AllowTypeErrors // TODO rm


1 div 2
//│ |1| |div| |2|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.5: 	1 div 2
//│ ╙──     	  ^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.5: 	1 div 2
//│ ╙──     	^^^^^^^
//│ Parsed: {1 (div (2,),)}

1 mod 2
//│ |1| |mod| |2|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.15: 	1 mod 2
//│ ╙──      	  ^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.15: 	1 mod 2
//│ ╙──      	^^^^^^^
//│ Parsed: {1 (mod (2,),)}

3 eq 4
//│ |3| |eq| |4|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.25: 	3 eq 4
//│ ╙──      	  ^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.25: 	3 eq 4
//│ ╙──      	^^^^^^
//│ Parsed: {3 (eq (4,),)}

xs map f map g map h
//│ |xs| |map| |f| |map| |g| |map| |h|
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.35: 	xs map f map g map h
//│ ╙──      	               ^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.35: 	xs map f map g map h
//│ ╙──      	             ^^^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.35: 	xs map f map g map h
//│ ╙──      	         ^^^^^^^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.35: 	xs map f map g map h
//│ ╙──      	       ^^^^^^^^^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.35: 	xs map f map g map h
//│ ╙──      	   ^^^^^^^^^^^^^^^^^
//│ ╔══[WARNING] Paren-less applications should use the 'of' keyword
//│ ║  l.35: 	xs map f map g map h
//│ ╙──      	^^^^^^^^^^^^^^^^^^^^
//│ Parsed: {xs (map (f (map (g (map (h,),),),),),)}


